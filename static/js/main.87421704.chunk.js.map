{"version":3,"sources":["components/Button.js","assets/buttonBank.js","components/AdvancedPanel.js","components/Display.js","components/Footer.js","App.js","assets/regexLastIndexOf.js","assets/timeCalc.js","serviceWorker.js","index.js"],"names":["Button","clickSelf","_this","props","resolveButtonPress","text","type","react_default","a","createElement","className","id","this","description","onClick","displayText","Component","basicButtons","desc","advancedButtons","children","AdvancedPanel","setStyle","style","onMobile","document","documentElement","clientWidth","display","_this2","styleObject","buttonElements","map","btn","Button_Button","key","Display","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","makeTextPretty","prettyText","minus","forEach","operand","split","join","concat","replace","state","calcText","Footer","href","PIE","App","buttonText","arguments","length","undefined","toggleAdvPanel","checkParenthBalance","lastNumberOperation","math","parseInt","toString","convertTo","evaluate","cleanText","setState","test","advanced","endString","lastOperandIndex","string","regex","startpos","global","RegExp","source","ignoreCase","multiLine","result","stringToWorkWith","substring","lastIndexOf","nextStop","exec","index","lastIndex","regexLastIndexOf","lastNumber","slice","seconds","calculateTime","toHours","toMinutes","time","match","timePartial","partialEnd","number","reduce","acc","curr","tot","alert","expression","inputSeconds","hours","minutes","notate","expressionToBeAbs","evaluatedExpression","buttons","AdvancedPanel_AdvancedPanel","ref","Display_Display","Footer_Footer","Boolean","window","location","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87421704.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport \"../css/Button.css\";\r\n\r\nexport default class Button extends Component {\r\n  clickSelf = () => {\r\n    this.props.resolveButtonPress(this.props.text, this.props.type);\r\n  };\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"calcButton\"\r\n        id={this.props.description}\r\n        onClick={this.clickSelf}\r\n      >\r\n        {this.props.displayText}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport const basicButtons = [\r\n  {text: \"C\", displayText: \"C\", desc: \"clear\"},\r\n  {text: \"()\", displayText: \"()\", desc: \"parenth\"},\r\n  {text: \"Adv\", displayText: \"Adv\", desc: \"advancedToggle\"},\r\n  {text: \"/\", displayText: \"/\", desc: \"divide\"},\r\n  {text: \"1\", displayText: \"1\", desc: \"one\"},\r\n  {text: \"2\", displayText: \"2\", desc: \"two\"},\r\n  {text: \"3\", displayText: \"3\", desc: \"three\"},\r\n  {text: \"*\", displayText: \"x\", desc: \"multiply\"},\r\n  {text: \"4\", displayText: \"4\", desc: \"four\"},\r\n  {text: \"5\", displayText: \"5\", desc: \"five\"},\r\n  {text: \"6\", displayText: \"6\", desc: \"six\"},\r\n  {text: \"-\", displayText: \"-\", desc: \"subtract\"},\r\n  {text: \"7\", displayText: \"7\", desc: \"seven\"},\r\n  {text: \"8\", displayText: \"8\", desc: \"eight\"},\r\n  {text: \"9\", displayText: \"9\", desc: \"nine\"},\r\n  {text: \"+\", displayText: \"+\", desc: \"add\"},\r\n  {text: \"swap\", displayText: \"+/-\", desc: \"changeSign\"},\r\n  {text: \"0\", displayText: \"0\", desc: \"zero\"},\r\n  {text: \".\", displayText: \".\", desc: \"decimal\"},\r\n  {text: \"=\", displayText: \"=\", desc: \"equals\"}\r\n];\r\n\r\nexport const advancedButtons = [\r\n  {text: \"sqrt\", displayText: <span>&radic;</span>, desc: \"SquareRoot\"},\r\n  {\r\n    text: \"exp\",\r\n    displayText: (\r\n      <span>\r\n        X<sup>y</sup>\r\n      </span>\r\n    ).props.children,\r\n    desc: \"exponent\"\r\n  },\r\n  {text: \"pi\", displayText: <span>&pi;</span>, desc: \"pi\"},\r\n  {text: \"!\", displayText: \"!\", desc: \"factorial\"},\r\n  {text: \"rev\", displayText: \"1/x\", desc: \"reverse\"},\r\n  {text: \"abs\", displayText: \"|x|\", desc: \"absolute-value\"},\r\n  {text: \"h\", displayText: \"h\", desc: \"hours\"},\r\n  {text: \"m\", displayText: \"m\", desc: \"minutes\"},\r\n  {text: \"s\", displayText: \"s\", desc: \"seconds\"},\r\n  {\r\n    text: \"con\",\r\n    type: \"H\",\r\n    displayText: (\r\n      <span>\r\n        <sup>=</sup>h\r\n      </span>\r\n    ).props.children,\r\n    desc: \"convertToHours\"\r\n  },\r\n  {\r\n    text: \"con\",\r\n    type: \"M\",\r\n    displayText: (\r\n      <span>\r\n        <sup>=</sup>m\r\n      </span>\r\n    ).props.children,\r\n    desc: \"convertToMinutes\"\r\n  },\r\n  {\r\n    text: \"con\",\r\n    type: \"S\",\r\n    displayText: (\r\n      <span>\r\n        <sup>=</sup>s\r\n      </span>\r\n    ).props.children,\r\n    desc: \"convertToSeconds\"\r\n  }\r\n];\r\n","import React, {Component} from \"react\";\r\n\r\nimport Button from \"./Button\";\r\n\r\nimport {advancedButtons} from \"../assets/buttonBank\";\r\n\r\nimport \"../css/AdvancedPanel.css\";\r\n\r\nexport default class AdvancedPanel extends Component {\r\n  setStyle = () => {\r\n    const style = {};\r\n    const onMobile = document.documentElement.clientWidth < 1000;\r\n    const scrollPositioning = onMobile ? \"top\" : \"left\";\r\n    style[scrollPositioning] = this.props.display\r\n      ? onMobile\r\n        ? \"85%\"\r\n        : \"68%\"\r\n      : \"40%\";\r\n    return style;\r\n  };\r\n  render() {\r\n    const styleObject = this.setStyle();\r\n    const buttonElements = advancedButtons.map((btn) => {\r\n      return (\r\n        <Button\r\n          key={btn.desc}\r\n          description={btn.desc}\r\n          text={btn.text}\r\n          displayText={btn.displayText}\r\n          type={btn.type}\r\n          resolveButtonPress={this.props.resolveButtonPress}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div id=\"advancedPanel\" style={styleObject}>\r\n        <div id=\"panelHeader\">\r\n          <h2>Advanced Buttons</h2>\r\n        </div>\r\n        <div id=\"advancedButtonGrid\">{buttonElements}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\n\r\nimport \"../css/Display.css\";\r\n\r\nexport default class Display extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      prettyText: props.calcText\r\n    };\r\n  }\r\n  makeTextPretty = (text) => {\r\n    let prettyText = text;\r\n    let minus = <span>&ndash;</span>;\r\n    minus = minus.props.children;\r\n\r\n    [\"+\", \"-\", \"*\", \"/\"].forEach((operand) => {\r\n      prettyText = prettyText.split(operand).join(` ${operand} `);\r\n    });\r\n\r\n    prettyText = prettyText.replace(/([hms])/g, \"$1 \");\r\n    prettyText = prettyText.replace(\"*\", \"x\");\r\n    prettyText = prettyText.replace(\"-\", minus);\r\n\r\n    return `${prettyText}`;\r\n  };\r\n  render() {\r\n    return (\r\n      <div id=\"displayBox\">\r\n        <div id=\"display\">{this.makeTextPretty(this.props.calcText)}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"../css/Footer.css\";\r\n\r\nexport default function Footer(props) {\r\n  return (\r\n    <footer>\r\n      This is a project made for the\r\n      Free Code Camp \"Front End Libraries\" Certification by{\" \"}\r\n      <strong>Alex Gouge-Schajer</strong> {\" \"}\r\n      using the <a href=\"http://mathjs.org/\">math.js</a> library for... well\r\n      math resolution\r\n    </footer>\r\n  );\r\n}\r\n","import React, {Component} from \"react\";\r\nimport * as math from \"mathjs\";\r\n\r\nimport AdvancedPanel from \"./components/AdvancedPanel\";\r\nimport Button from \"./components/Button\";\r\nimport Display from \"./components/Display\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport {basicButtons} from \"./assets/buttonBank\";\r\nimport regexLastIndexOf from \"./assets/regexLastIndexOf\";\r\nimport {toSeconds, toMinutes, toHours, notate} from \"./assets/timeCalc\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nconst PIE = 3.14;\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      calcText: \"0\",\r\n      advanced: false,\r\n      basicButtons: basicButtons\r\n    };\r\n  }\r\n\r\n  resolveButtonPress = (buttonText, type = \"null\") => {\r\n    let calcText = this.state.calcText;\r\n    switch (buttonText) {\r\n      case \"Adv\":\r\n        this.toggleAdvPanel();\r\n        break;\r\n\r\n      case \"C\":\r\n        calcText = ``;\r\n        break;\r\n\r\n      case \"()\":\r\n        calcText += `${this.checkParenthBalance(calcText)}`;\r\n        break;\r\n\r\n      case \"swap\":\r\n        calcText = this.lastNumberOperation(calcText, \"swap\");\r\n        break;\r\n\r\n      case \"sqrt\":\r\n        calcText = math.sqrt(parseInt(calcText)).toString();\r\n        break;\r\n\r\n      case \"exp\":\r\n        calcText = this.lastNumberOperation(calcText, \"exp\");\r\n        break;\r\n\r\n      case \"pi\":\r\n        if (calcText !== `${PIE}`) calcText += PIE;\r\n        break;\r\n\r\n      case \"rev\":\r\n        calcText = this.lastNumberOperation(calcText, \"rev\");\r\n        break;\r\n\r\n      case \"abs\":\r\n        calcText = `|${calcText}|`;\r\n        break;\r\n\r\n      case \"con\":\r\n        calcText = this.convertTo(calcText, type);\r\n        break;\r\n\r\n      case \"=\":\r\n        calcText = `${this.evaluate(calcText)}`;\r\n        break;\r\n\r\n      default:\r\n        calcText += `${buttonText}`;\r\n    }\r\n    calcText = this.cleanText(calcText);\r\n    this.setState({calcText: calcText});\r\n  };\r\n\r\n  checkParenthBalance = (text) => {\r\n    if (text === `0`) return \"(\";\r\n    return /\\(/.test(text) ? `)` : `(`;\r\n  };\r\n\r\n  toggleAdvPanel = () => {\r\n    this.setState({\r\n      advanced: !this.state.advanced\r\n    });\r\n  };\r\n\r\n  cleanText = (text) => {\r\n    // doesn't let a number start with any zeros\r\n    let cleanText = text.replace(/0{0,}(?=[0-9])/, \"\");\r\n\r\n    // doesn't allow more than one decimal per number\r\n    cleanText = cleanText.replace(/(?<=\\.)\\.|(?<=\\.\\d+)\\./, \"\");\r\n\r\n    // doesn't allow more than one operation between numbers\r\n    cleanText = cleanText.replace(/[/+\\-*](?=[/+\\-*])/, \"\");\r\n\r\n    return cleanText !== \"\" ? cleanText : \"0\";\r\n  };\r\n\r\n  lastNumberOperation = (text, type) => {\r\n    if (text === \"0\") return text;\r\n\r\n    const lastOperandIndex = regexLastIndexOf(text, /[+\\-*/]/) + 1;\r\n    const lastNumber = parseInt(text.substring(lastOperandIndex));\r\n    let endString;\r\n\r\n    switch (type) {\r\n      case \"swap\":\r\n        endString = `(${lastNumber * -1})`;\r\n        break;\r\n\r\n      case \"exp\":\r\n        endString = `(${lastNumber})^(`;\r\n        break;\r\n\r\n      case \"rev\":\r\n        endString = `(1/${lastNumber})`;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return `${text.slice(0, text.lastIndexOf(lastNumber))}${endString}`;\r\n  };\r\n\r\n  convertTo = (calcText, type) => {\r\n    const seconds = this.calculateTime(calcText);\r\n\r\n    switch (type) {\r\n      case \"H\":\r\n        return toHours(seconds);\r\n\r\n      case \"M\":\r\n        return toMinutes(seconds);\r\n\r\n      case \"S\":\r\n        return seconds + \"s\";\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  calculateTime = (text) => {\r\n    if (!/[hms]/.test(text)) {\r\n      alert(\"Invalid Input!\");\r\n      return;\r\n    }\r\n    return text\r\n      .split(/[/+*-]/)\r\n      .map((time) => toSeconds(time))\r\n      .reduce((tot, curr) => tot + curr, 0);\r\n  };\r\n\r\n  evaluate = (expression) => {\r\n    if (/[hms]/.test(expression)) {\r\n      const resolvedToSeconds = this.calculateTime(expression);\r\n      return notate(resolvedToSeconds);\r\n    } else if (/\\|/.test(expression)) {\r\n      const expressionToBeAbs = expression.replace(/(\\|)(.{0,})\\1/, \"$2\");\r\n      let evaluatedExpression = math.eval(expressionToBeAbs);\r\n      return evaluatedExpression < 0\r\n        ? evaluatedExpression * -1\r\n        : evaluatedExpression;\r\n    } else if (/[+\\-/*.]$/.test(expression)) {\r\n      alert(`not a valid equation!`);\r\n      return;\r\n    } else {\r\n      return `${math.eval(expression)}`;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const buttons = this.state.basicButtons.map((btn) => {\r\n      return (\r\n        <Button\r\n          key={btn.desc}\r\n          description={btn.desc}\r\n          text={btn.text}\r\n          displayText={btn.displayText}\r\n          resolveButtonPress={this.resolveButtonPress}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <AdvancedPanel\r\n          display={this.state.advanced}\r\n          resolveButtonPress={this.resolveButtonPress}\r\n        />\r\n        <div ref={\"container\"} id=\"calculator\">\r\n          <Display calcText={this.state.calcText} />\r\n          <div id=\"buttonGrid\">{buttons}</div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function regexLastIndexOf(string, regex, startpos) {\r\n  regex = regex.global\r\n    ? regex\r\n    : new RegExp(\r\n        regex.source,\r\n        \"g\" + (regex.ignoreCase ? \"i\" : \"\") + (regex.multiLine ? \"m\" : \"\")\r\n      );\r\n  if (typeof startpos == \"undefined\") {\r\n    startpos = string.length;\r\n  } else if (startpos < 0) {\r\n    startpos = 0;\r\n  }\r\n  let stringToWorkWith = string.substring(0, startpos + 1);\r\n  let lastIndexOf = -1;\r\n  let nextStop = 0;\r\n  let result;\r\n  while ((result = regex.exec(stringToWorkWith)) != null) {\r\n    lastIndexOf = result.index;\r\n    regex.lastIndex = ++nextStop;\r\n  }\r\n  return lastIndexOf;\r\n}\r\n","export function toSeconds(inputString) {\r\n  const letterMatch = inputString.match(/\\d{1,}[hms]/g);\r\n\r\n  const seconds = letterMatch\r\n    .map((timePartial) => {\r\n      const partialEnd = timePartial.length - 1;\r\n      const number = parseInt(timePartial.substring(0, partialEnd));\r\n      switch (timePartial[partialEnd]) {\r\n        case \"h\":\r\n          return number * 3600;\r\n\r\n        case \"m\":\r\n          return number * 60;\r\n\r\n        case \"s\":\r\n          return number;\r\n\r\n        default:\r\n          return 0;\r\n      }\r\n    })\r\n    .reduce((acc, curr) => acc + curr, 0);\r\n\r\n  return seconds;\r\n}\r\n\r\nexport function toMinutes(seconds) {\r\n  return `${seconds / 60}m`;\r\n}\r\n\r\nexport function toHours(seconds) {\r\n  return `${seconds / 3600}h`;\r\n}\r\n\r\nexport function notate(inputSeconds) {\r\n  let seconds = inputSeconds;\r\n  let hours = 0;\r\n  let minutes = 0;\r\n\r\n  while (seconds >= 60) {\r\n    seconds -= 60;\r\n    minutes++;\r\n  }\r\n\r\n  while (minutes >= 60) {\r\n    minutes -= 60;\r\n    hours++;\r\n  }\r\n\r\n  var result = `${hours}h${minutes}m${seconds}s`;\r\n  return result;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}